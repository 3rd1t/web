name: Testing

on:
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn fmt
  build:
    strategy:
      matrix:
        app: [website, app]
    name: Build ${{matrix.app}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install
      - name: build
        run: yarn nx build ${{matrix.app}}
        env:
          # Apparently node actually looks for these during the build step
          # So we need them in our CI as well, even though they can be anything
          AUTH0_DOMAIN: NOT_EMPTY
          AUTH0_CLIENT_ID: NOT_EMPTY
          AUTH0_CLIENT_SECRET: NOT_EMPTY
          AUTH0_REDIRECT_URI: NOT_EMPTY
          AUTH0_POST_LOGOUT_REDIRECT_URI: NOT_EMPTY
          COOKIE_SECRET: NOT_EMPTYaaaaaaaaaaaaaaaaaaaaaaa
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install
      - name: test
        run: yarn test

  terraform:
    runs-on: ubuntu-latest
    name: Validate terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{secrets.TF_API_TOKEN}}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform -chdir=deployments init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=deployments validate -no-color
        env:
          NOMAD_ADDR: http://localhost:4646