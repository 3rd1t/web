name: Testing

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn fmt
  test:
    strategy:
      matrix:
        node: ["14", "12"]
    name: unit test @ node ${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"
      - name: Install dependencies
        run: yarn install
      - run: yarn test
  e2e:
    strategy:
      matrix:
        package: ["core-e2e", "research-e2e"]
    name: "${{ matrix.package }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Install dependencies
        run: yarn install
      - name: Build css
        run: yarn build:css
      - name: Run Integration test
        run: yarn nx run "${{ matrix.package }}":e2e
  lighthouse:
    strategy:
      matrix:
        app: ["research", "core"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: install
        run: yarn install && npm install -g @lhci/cli
      - name: build
        run: yarn build
      - name: run lighthouse
        run: ls -al ${{github.workspace}} && lhci --config=${{github.workspace}}/lighthouse/${{matrix.app}}.js autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
