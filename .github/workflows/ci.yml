name: Testing

on: push

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install

  lint:
    needs: install
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn fmt
  build:
    needs: install
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: build
        run: yarn build
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{github.workspace}}/dist

  unit-test:
    needs: install
    strategy:
      matrix:
        node: ["14", "12"]
    name: unit test @ node ${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: test
        run: yarn test --skip-nx-cache --codeCoverage
      - name: Upload coverage result
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ${{github.workspace}}/coverage

  codacy-coverage-reporter:
    needs: unit-test
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@v2
      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ${{github.workspace}}/coverage
      - name: Run codacy-coverage-reporter
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -r ${{github.workspace}}/coverage/apps/project/lcov.info
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -r ${{github.workspace}}/coverage/apps/core/lcov.info
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -r ${{github.workspace}}/coverage/apps/research/lcov.info
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -r ${{github.workspace}}/coverage/libs/components/lcov.info
          bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  e2e-test:
    needs: build
    strategy:
      matrix:
        package: ["core-e2e", "research-e2e", "project-e2e"]
    name: e2e test @${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: Install cypress
        run: yarn cypress install
      - name: Build css
        run: yarn build:css
        env:
          NODE_ENV: production
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ${{github.workspace}}/dist
      - name: Run Integration test
        run: yarn nx run "${{ matrix.package }}":e2e
  lighthouse:
    needs: build
    strategy:
      matrix:
        package: ["core", "research", "project"]
    name: lighthouse @${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{github.workspace}}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: Build css
        run: yarn build:css
        env:
          NODE_ENV: production
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ${{github.workspace}}/dist
      - name: export
        run: yarn nx run ${{ matrix.package }}:export
      - name: run lighthouse
        run: yarn lhci autorun
        env:
          LHCI_CONFIG: lighthouse/${{matrix.package}}.js
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
