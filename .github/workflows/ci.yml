name: Testing

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn fmt
  build:
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: build
        run: yarn build
  test:
    strategy:
      matrix:
        node: ["14", "12"]
    name: unit test @ node ${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: test
        run: yarn test
  codacy-coverage-reporter:
    needs: test
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@master
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports:  ${{github.workspace}}/coverage/apps/core/lcov.info:lcov,${{github.workspace}}/coverage/apps/research/lcov.info:lcov,${{github.workspace}}/coverage/libs/components/lcov.info:lcov
  e2e:
    strategy:
      matrix:
        package: ["core-e2e", "research-e2e"]
    name: "${{ matrix.package }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: actions/cache@v2    
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Install cypress
        run: yarn cypress install
      - name: Build css
        run: yarn build:css
      - name: Run Integration test
        run: yarn nx run "${{ matrix.package }}":e2e
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: actions/cache@v2    
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install && npm install -g @lhci/cli
      - name: build
        run: yarn build
      - name: export
        run: yarn nx run-many --target=export --all
      - name: run lighthouse
        run: |
          lhci --config=${{github.workspace}}/lighthouse/core.js autorun
          lhci --config=${{github.workspace}}/lighthouse/research.js autorun
          lhci --config=${{github.workspace}}/lighthouse/project.js autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
