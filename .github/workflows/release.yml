name: Release

on:
  push:
    branches: [ master, main ]
jobs:
  build:
    strategy:
      matrix:
        svc: [website, app]
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
          

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Pull image
        run: docker pull ${perfolio/web-${{matrix.svc}}}
      - name: Build image and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./build/Dockerfile
          build-args: 
            SERVICE=${{matrix.svc}}
          tags: |
            perfolio/web-${{matrix.svc}}:prod
            perfolio/web-${{matrix.svc}}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{secrets.TF_API_TOKEN}}
      
      - name: Init
        run: terraform -chdir=deployments init
      - name: Taint
        run: |
          terraform -chdir taint nomad_job.website
          terraform -chdir taint nomad_job.app
      - name: Apply
        run: terraform -chdir=deployments apply -auto-approve
